<?xml version="1.0" encoding="UTF-8"?>
<project name="cranesim" default="all">
  
  
  <property file="cranesim.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.o/**"/>
    <exclude name="**/*.obj/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.ane"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/compilefontconfig.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/javazic.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/rhino.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/pulse-java.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/java-atk-wrapper.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Global Libraries -->
  
  <!-- Modules -->
  
  
  <!-- Module A2 -->
  
  <dirname property="module.a2.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.a2" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.a2" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.a2" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.a2" value="${compiler.args}"/>
  
  <property name="a2.output.dir" value="${module.a2.basedir}/out/production/A2"/>
  <property name="a2.testoutput.dir" value="${module.a2.basedir}/out/test/A2"/>
  
  <path id="a2.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="a2.module.production.classpath">
    <path refid="${module.jdk.classpath.a2}"/>
  </path>
  
  <path id="a2.runtime.production.module.classpath">
    <pathelement location="${a2.output.dir}"/>
  </path>
  
  <path id="a2.module.classpath">
    <path refid="${module.jdk.classpath.a2}"/>
    <pathelement location="${a2.output.dir}"/>
  </path>
  
  <path id="a2.runtime.module.classpath">
    <pathelement location="${a2.testoutput.dir}"/>
    <pathelement location="${a2.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.a2">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.a2">
    <patternset refid="excluded.from.module.a2"/>
  </patternset>
  
  <path id="a2.module.sourcepath">
    <dirset dir="${module.a2.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.a2" depends="compile.module.a2.production,compile.module.a2.tests" description="Compile module A2"/>
  
  <target name="compile.module.a2.production" description="Compile module A2; production classes">
    <mkdir dir="${a2.output.dir}"/>
    <javac destdir="${a2.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.a2}/javac">
      <compilerarg line="${compiler.args.a2}"/>
      <bootclasspath refid="a2.module.bootclasspath"/>
      <classpath refid="a2.module.production.classpath"/>
      <src refid="a2.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.a2"/>
    </javac>
    
    <copy todir="${a2.output.dir}">
      <fileset dir="${module.a2.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.a2.tests" depends="compile.module.a2.production" description="compile module A2; test classes" unless="skip.tests"/>
  
  <target name="clean.module.a2" description="cleanup module">
    <delete dir="${a2.output.dir}"/>
    <delete dir="${a2.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.a2" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.a2" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.a2:jar" value="${basedir}/out/artifacts/A2_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.A2.jar" value="${artifacts.temp.dir}/A2.jar"/>
  </target>
  
  <target name="artifact.a2:jar" depends="init.artifacts, compile.module.a2" description="Build &#39;A2:jar&#39; artifact">
    <property name="artifact.temp.output.a2:jar" value="${artifacts.temp.dir}/A2_jar"/>
    <mkdir dir="${artifact.temp.output.a2:jar}"/>
    <jar destfile="${temp.jar.path.A2.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset file="${basedir}/src/META-INF/MANIFEST.MF" prefix="META-INF"/>
      <zipfileset dir="${a2.output.dir}"/>
    </jar>
    <copy file="${temp.jar.path.A2.jar}" tofile="${artifact.temp.output.a2:jar}/A2.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.a2:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.a2:jar}"/>
    <copy todir="${artifact.output.a2:jar}">
      <fileset dir="${artifact.temp.output.a2:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>